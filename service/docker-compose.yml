---
networks:
  default:
  ingress:
    external: true

volumes:
  cache:
  jellyfin:
  jellyseerr:
  radarr:
  sonarr:
  bazarr:
  threadfin:
  tmp:
  webgrabplus:
  epg:

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1000:1000
    group_add:
      - "109" # 109 is the id of the 'render' group on my host, used to enable hardware acceleration
    ports:
      - '8096:8096'
    volumes:
      - jellyfin:/config
      - cache:/cache
      - /data:/media:ro
    environment:
      - TZ=Europe/Madrid
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    # environment:
      # - JELLYFIN_PublishedServerUrl=http://${HOST}
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    dns:
      - 10.80.0.2
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    healthcheck:
      test: curl -sS http://127.0.0.1:8096 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    devices:
      - /dev/dri:/dev/dri
    networks:
      - default
      - ingress
    labels:
      caddy: media.karpincho.duckdns.org
      caddy.reverse_proxy: "{{upstreams 8096}}"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - TZ=Europe/Madrid
    ports:
      - '8097:5055'
    volumes:
      - jellyseerr:/app/config
    dns:
      - 10.80.0.2
    networks:
      - default
      - ingress
    labels:
      caddy: media-requests.karpincho.duckdns.org
      caddy.reverse_proxy: "{{upstreams 5055}}"
    restart: unless-stopped
    # healthcheck:
    #   test: curl -sS http://127.0.0.1:5055 || exit 1
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  sonarr:
    restart: unless-stopped
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    ports:
      - "8099:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - sonarr:/config
      - /data:/data
    dns:
      - 10.80.0.2
    networks:
      - default
    healthcheck:
      test: curl -sS http://127.0.0.1:8989 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  radarr:
    restart: unless-stopped
    container_name: radarr
    image: ghcr.io/hotio/radarr
    ports:
      - "8098:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
    volumes:
      - radarr:/config
      - /data:/data
    dns:
      - 10.80.0.2
    networks:
      - default
    healthcheck:
      test: curl -sS http://127.0.0.1:7878 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    
  bazarr:
    restart: unless-stopped
    container_name: bazarr
    image: ghcr.io/hotio/bazarr
    ports:
      - "8094:6767"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Madrid
      - WEBUI_PORTS=6767/tcp,6767/udp
    volumes:
      - bazarr:/config
      - /data:/data
    dns:
      - 10.80.0.2
    networks:
      - default
    healthcheck:
      test: curl -sS http://127.0.0.1:6767 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  threadfin:
    image: fyb3roptik/threadfin
    container_name: threadfin
    ports:
      - 34400:34400
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Madrid
    volumes:
      - threadfin:/home/threadfin/conf
      - tmp:/tmp/threadfin:rw
    restart: unless-stopped

  webgrabplus:
    image: lscr.io/linuxserver/webgrabplus:latest
    container_name: webgrabplus
    hostname: webgrabplus
    mac_address: 00:00:00:00:00:00
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid
    volumes:
      - webgrabplus-config:/config
      - epg:/data
    restart: unless-stopped
    dns:
      - 10.80.0.2

